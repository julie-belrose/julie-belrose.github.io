---
import Section from "../Section.astro";

import { projects } from "@cv";
import Arrow from "../ui/icons/utils/arrow.astro";
import Git from "../ui/icons/Programming/git.astro";
import HTML from "../ui/icons/Programming/frontend/html.astro";
import CSS from "../ui/icons/Programming/frontend/css.astro";
import JavaScript from "../ui/icons/Programming/frontend/javascript.astro";
import TypeScript from "../ui/icons/type.astro";
import React from "../ui/icons/Programming/frontend/react.astro";
import NodeJS from "../ui/icons/Programming/backend/node.astro";
import MySQL from "../ui/icons/Programming/backend/mysql.astro";
import GitHub from "../ui/icons/Programming/github.astro";
import Next from "../ui/icons/next.astro";
import Tailwind from "../ui/icons/Programming/frontend/tailwind.astro";
import Angular from "../ui/icons/Programming/frontend/angular.astro";
import Docker from "../ui/icons/Programming/CI-CD/docker.astro";
import Drone from "../ui/icons/Programming/CI-CD/drone.astro";
import MailGun from "../ui/icons/Programming/mailgun.astro";
import Sentry from "../ui/icons/Programming/CI-CD/sentry.astro";
import ExpressJS from "../ui/icons/Programming/backend/expressjs.astro";
import MongoDB from "../ui/icons/Programming/backend/mongodb.astro";
import Mongoose from "../ui/icons/Programming/backend/mongoose.astro";
import Rancher from "../ui/icons/Programming/CI-CD/rancher.astro";
import SASS from "../ui/icons/Programming/frontend/sass.astro";
import Jest from "../ui/icons/Programming/jest.astro";
import Chartjs from "../ui/icons/Programming/frontend/chartjs.astro";
import SpringBoot from "../ui/icons/Programming/backend/springboot.astro";
import JUnit from "../ui/icons/Programming/backend/junit.astro";
import Java from "../ui/icons/Programming/backend/java.astro";
import Spring from "../ui/icons/Programming/backend/spring.astro";
import PostgreSQL from "../ui/icons/Programming/backend/postgresql.astro";
import Heroku from "../ui/icons/Programming/CI-CD/heroku.astro";
import SQL from "../ui/icons/Programming/backend/sql.astro";
import Sqitch from "../ui/icons/Programming/backend/sql.astro";
import Hardhat from "../ui/icons/Programming/blockchain/hardhat.astro";
import Vite from "../ui/icons/Programming/vite.astro";
import Etherjs from "../ui/icons/Programming/etherjs.astro";
import GitHubAction from "../ui/icons/Programming/CI-CD/githubaction.astro";
import AstroIcon from "../ui/icons/Programming/astroicon.astro";

const TECHNO_ICONS: Record<string, any> = {
	HTML,
	CSS,
	JavaScript,
	TypeScript,
	React,
	NodeJS,
	MySQL,
	Git,
	GitHub,
	Next,
	Tailwind,
	Angular,
	Docker,
	Drone,
	MailGun,
	Sentry,
	ExpressJS,
	MongoDB,
	Mongoose,
	Rancher,
	SASS,
	Jest,
	Chartjs,
	SpringBoot,
	JUnit,
	Java,
	Spring,
	PostgreSQL,
	Heroku,
	SQL,
	Sqitch,
	Hardhat,
	Vite,
	Etherjs,
	GitHubAction,
	AstroIcon
}
---

<Section className={Astro.props.className} title="Projets">
	<div class="grid grid-cols-1 gap-3 md:grid-cols-2 print:flex print:flex-col">
		{
			projects.map(({ url , description, highlights, name, isActive, github, technos}) => {
				return (
					<div role="contentinfo" class="grid-span-1 ring-skin-muted relative flex flex-col rounded-md bg-skin-button-muted/50 p-5 shadow-sm ring-1">
						<div class="flex items-center justify-between space-x-[10px]">
							<div class="flex items-center gap-2">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-folder size-4">
									<path d="M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z" />
								</svg>
								<div class="flex items-center gap-[6px]">
									{isActive && url ? (
										<a class="hover:text-skin-hue group flex items-center gap-[6px] text-lg decoration-dotted underline-offset-[5px] hover:underline" href={url} title={`Ver ${name}`} target="_blank">
											{name}
											<span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5">
												<Arrow />
											</span>
										</a>
									) : (
										<span>{name}</span>
									)}
								</div>
							</div>

							{github && (
								<a href={github} title="View slug repository on GitHub" target="_blank" rel="noopener" class="opacity-75 transition-opacity duration-100 hover:opacity-100">
									<Git />
								</a>
							)}
						</div>

						<p class="py-3 text-sm text-skin-base">{description}</p>
						<ul class="mt-1 text-sm text-skin-muted">
							{ highlights?.map((highlight) => {
								return <li>{highlight}</li>;
							})}
						</ul>

						<ul class="[&>li>svg]:text-skin-hue inline-flex flex-wrap [&>li>svg]:tm-left-0 [&>li>svg]:size-5 [&>li]:text-sm py-3">
							{technos?.map(({ icon , name}) => {
								const Icon = TECHNO_ICONS[icon];
                  return (
									<li class="border-skin-hue/20s bg-skin-button-accent/20s borders border-solids flex items-center gap-1 rounded-md px-2 py-0.5 text-xs text-skin-muted print:border-none print:bg-transparent print:p-0 print:text-zinc-800">
										{Icon && <Icon />} {/* Si l'ic√¥ne existe, affichez-la */}
										<span>{name ? name : icon}</span>
									</li>
								);
							})}
						</ul>

					</div>
				);
			})
		}
	</div>
</Section>

<style>
	li::marker {
		@apply text-skin-hue
	}

	ul {
		@apply ml-4 list-disc space-y-1;
		li {
			@apply text-skin-muted;
		}
	}

	footer {
		display: flex;
		flex-wrap: wrap;
		gap: 4px;
		font-size: 0.6rem;
	}

	footer span {
		border-radius: 6px;
		background: #eee;
		color: #444;
		font-size: 0.6rem;
		font-weight: 500;
		padding: 0.2rem 0.6rem;
	}
	@keyframes flicker {
		0% {
			opacity: 1;
		}
		50% {
			opacity: 0.25;
		}
		100% {
			opacity: 1;
		}
	}
</style>
